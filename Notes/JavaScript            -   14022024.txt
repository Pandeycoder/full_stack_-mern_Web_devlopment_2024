JavaScript            :-   14/02/2024
==================================


================================
Using the Console :-
==================================
-> Uses REPL ( Read-Evalute-Print-Loop ).

   ctrl+l for window (clean ) 



==============================
What is a variable :-
==============================
-> A variable is simply the named of a stroge location.

-> a=10 
   name="rahul"

========================================
Data types in JS :-
========================================

-> Primitives types :-

   1) Number           4) Undefiend           Bigint
   2) Boolean          5) Null                Symbol
   3) String 

------------------------------
Number in Js
--------------------------------
->Positve (14) & Negative (-4).

-> Integer (45, -50)

-> Floting number with decimal (4.6 -8.9)

---------------------------------------
Operations in JS :-
-------------------------------------
-> a=    10         +          20    =30
          |         |          |
     operand     operator      operand

---------------------------------------
NaN in JS
---------------------------------------
-> The NaN global propertu=y is a value representing Not-A-Number.

Ex:
     0/0   naN-1    NaN*1    NaN*NaN   => NaN


=================================
Operator Precendance :-
=================================

-> This is general order of solving an expresssion.

Example:-  percedance : ()  **  *,/,%   +,-


-----------------------------
Let keyword :-
-----------------------------
-> Syntax of declearing variables.

Example:-
 
     let age=23;        let cgpa

    age = age + 1;       cgpa=8.9

------------------------------------
Const keyword
-------------------------------------------
-> values of const can't be changed with re-assignment & they can't be re decleared.
-> Example :-

   const year=2025;

   year=2026          ///error

   year=year+1        //error

 
---------------------------------
Assignment operator :-
-------------------------------
    Ex:-
         age = age+1

         age+=1

         age*=1

         age-=1


=================================
Unary Operator :-
=================================

      age = age+1
 
      age+=1

      age++;

==========================
Identifiers  Rules :-
==========================
-> All javaScript variables must be identified with uniques names .

->name must be contain letters digits underscores and dollers.

-> name must be begin with a letter 

-> name must be also begion with $ .

->  Name are case sensitive .

-> Resereved wors (like javasript keywors ) cannot be used a names.

Ex :-  let price, let price12 , let price$ ,let price_     valid.....

---------------------------------------------------
camel case :-
-----------------------------------------------

-> way of writing identifier.

-> camelcase           let fulName; 

-> snake_case          let full_name;

-> pascalCase  :       let FullName;

========================================
Boolean in Js
-=======================================
-> boolean reprsent a truth value -> true or false /yes or no.

-> let age=23;

   let isAdult = true;


=========================================
What is TypeScript :-
==========================================
-> Static Tped , where js is dynamic typed.
 
-> Designed by Microsoft.


==============================
String In Js :-
================================
-> Strings are text or sequence of character.

-> let name="tony stark";

    let role='ironam';

    let num='23';

    let empty="";


=======================================
Template Literals  :    15/02/2024
=======================================
-> They are used ot add embeded expression in a string.

Ex: -let a=5;
     console.log("value :- " ,a);


==============================
Operator in JS :-
==============================

-> Arithemetic (+,-,*,/,%)

-> Uniary (++,--)

-> Assignment operator (+= ,-=,*= etc.)

-> compersion (<=,>=,>,<,==,!= ,  ===  ,etc.)

          ===(compare type and value),  == compare value ,not type

-> Logical (&&,||,^)

Note:-
-------   uni-code of  (A =40     ,a=60)


==================================
truthy & falsy :-
=====================================

-> Everything in JS is true or false (in boolean context).

 -> The doesn't mean their value itself is flase or true. it taken in boolean context.

Example:-

    falsy values :

      false, 0, -0, On(bright value) , ""(empty string) ,null ,undefiend. ,NaN

    Truthy values :-

     Everthing else



=====================================
 11.     Alert  & Prompt  :-
======================================

-> Alert displays an alert message on the page.

  Ex: alert(:something is wrong!");

-> Prompt displays a dialog box that asks user for some input .

 Ex: - prompt("please enter your roll no.")
 
 

=================================================
String Method :-                16/02/2024
=================================================

-> Method - action that can be performed on objects.

   Format :-
             StringName.method()

-----------------------------------------
String trim method :-
---------------------------------------

Ex:- let msg=" Hello  ";
    
    str.trim();
  
     -> Trims whitespaces form both ends of String & return a new one.



-------------------------------------------
Array 
------------------------------------------
-> LInear collection of things.

  Ex:- let s=["aman " ,"rahulIT"];

note:-
--------
      -> array is mutable mean we can chnage.


-------------------------------------
Array method:-
---------------------------
push : addd to end
 
unshift : add to start

pop :delete from end & retunr it.

shift : delete from start & return it.

-----------------------------------
Array method :-
-------------------------------

indexOf :- return index of something .  (if value is not available than print -1)

-> Includes : search for a value.(true or flase value)

--------------------------------
Array method :-
-------------------------------

-> concat :- merge 2 arrays .

-> reverse : reverse an array


 ----------------------------------
Splice Array method :-
------------------------------------
-> removes /replace/add element in place.

-> splice (start ,deleteCount, item0....itemn)

Exmaple : let cars=["xuv", "toyato" ,"maruti"]
         
          cars.splice(1,0,"bmw");  //xuv bmw,toyato..
          cars.splice(1,1);   // xuv, toyato... 
          

-------------------------------------
sort mthod 
------------------------------------------
sort:- sort an arrays .

 let x=[5,3,7,8,2,1];
 x.sort();

--------------------------
Arrays reference :-
---------------------------
->   "name"== "name"

    "name"=== "name"

---------------------------------
const arrays :-
--------------------------------
const arr=[1,2,3,4];


----------------------------
Nested Arrays :-
------------------------------------
-> Multi dimensional

-=> it is collecitons of arrays  of arrays.

let nums=[ [1,2],[3,4],[4,5] ];

console.log(nums);   //Arrays(2) ,arrays(2)..



=======================================
for loop
=====================================

 for(let i=1;i<=5;i++)
 {
   console.log(i);
 }


=============================================
 Functions In Js               19/02/2024.....
==============================================

->  Example :   console.log() , arr.push(); ,arr.pop()

function functionName(){ do something}

Function Calling(Using the function)


--------------------------------
Function with argument:-
--------------------------------
-> Values we pass to the function.

  Ex:  function functionName(arg1,agr2,arg2..)


-------------------------------------
Return :
---------------------------------
-> retunr keyword is used to return some value from the fuunction .

input  ------- function --------output



================================
Scope   :-
================================

-> Scope determines the accessibility of variables , object  and function from different parts of the code.

-> Fucntion 

-> Block

-> Lexical

-> Global Scope


-------------------------------
Block scope
-----------------------------------

-> variables decleared  inside a {} block cannot be accessed from outside.

-------------------------------------
Lexical Scope :-
-----------------------------------------
-> a variable define out side a function caan be accessed inside another function defined after the variable declearation.

The opposite is not true.

/laxical Funci=tion

function OutFun()
{

    function innerFun()
    {
        console.log(x+y);
    }
    
    let x=10;
    let y=30;


    innerFun()
}

OutFun();


---------------------------
High order function 
------------------------------
-> a function that does one or both.

-> takes one or multi fun as argum.

-> retunr a function.


-------------------------------------
Methods :-
------------------------------------

-> Action that can be performed on an object.
 



============================================
This Keywords :-          20/02/2024
============================================

-> "This" keywords refer to an object that is executing the current piece of code.


====================================
Try catch  :-
=======================================

-> The try statement  allows you to define a block of code to be tested for error while it is exceptions.

-> The catch statement allows you to dfefine a block of code to be executed if an error occurs in the try block.


====================================
Miscellaneous Topics :-
=====================================

--------------------------
Arrow fiucntion :-
-----------------------------

-> const func=(arge1, arg2...)=> {function definition}

Example :-
 
   const sum=(a,b)=>{
      console.log(a+b);
    }


---------------------------------
Arrow impilicit return :-
----------------------------------

const func=(arg1,arg2...) => {value}

const mul = (a,b) => (
  a*b
);


------------------------------
Set Timeout :-
-------------------------------
-> setTimeout( function ,timeout)

Ex: console.log("ji there");

settimeout ( ()=> {
 console.log("Rahul IT");
},4000);

console.log("welocme to");

--------------------------------------------
set interval:-
------------------------------------------

setInterval( function ,timeout)

setInterval ( ()=> {
 console.log("Rahul IT");
},2000);


--------------------------------------
this with arrow function 
---------------------------------------

-> 





